import com.bmuschko.gradle.docker.tasks.image.DockerBuildImage

plugins {
    id 'org.springframework.boot' version '1.5.10.RELEASE' apply false
    id 'com.garyclayburg.dockerprepare' version '1.3.1' apply false
    id "com.bmuschko.docker-remote-api" version "3.2.0" apply false
}

repositories {
    mavenCentral()
}

subprojects {
    apply plugin: 'java'

    group = 'org.gradle.sample'
    version = '1.0'
    repositories {
        mavenCentral()
    }
    dependencies {
        testCompile "junit:junit:4.12"
    }
}

project(':api') {
    dependencies {
        compile project(':shared')
    }
}

project(':services:personService') {
    apply plugin: 'com.garyclayburg.dockerprepare'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'com.bmuschko.docker-remote-api'

    dockerprepare {
        commonService = ['org.springframework.boot:spring-boot-starter-web','org.springframework.boot:spring-boot-starter-actuator']
    }

    def dockerimage = 'registry:5000/multiprojectdemo'

    task buildImage(type: DockerBuildImage, dependsOn: 'dockerLayerPrepare') {
        description = 'Package application as Docker image'
        group = 'Docker'
        inputDir = project.file(dockerprepare.dockerBuildDirectory)
        tags = [dockerimage + ':' + version, dockerimage + ':latest']
    }

    dependencies {
        compile project(':shared'), project(':api')
        compile('org.springframework.boot:spring-boot-starter-actuator')
        compile('org.springframework.boot:spring-boot-starter-web')
        testCompile('org.springframework.boot:spring-boot-starter-test')
        compile "org.springframework.boot:spring-boot-configuration-processor"
    }
}

